# -*- coding: utf-8 -*-
"""pythonworkshopday2oops

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1GsoPoik8lvCki6e66PonpE6guaYIa3Gk

**Object oriented programming**
"""

class sample:
  name='kevin'
obj1=sample()
obj2=sample()
print(obj1.name,obj2.name)

class sample:
  def display(self):
    print('name')
obj1=sample()
obj2=sample()
#print(obj1.name,obj2.name)
obj1.display()
obj2.display()

class sample:
  def __init__(self):
    self.name='kevin'
  def display(self):
    print(self.name)
obj1=sample()
obj1.display()

#initialize variable in object
class student:
  def __init__(self,name,age):
    self.name=name
    self.age=age
  def display(self):
    print(self.name,self.age)
obj1=student('kevin',12)
obj2=student('rahul',18)
obj1.display()
obj2.display()

#here if the cat inherits dog then it would be multilevel
class animal:
  def __init__(self,name):
    self.name=name
  def display(self):
    print(self.name)
  def speak(self):
    pass
class dog(animal):
  def __init__(self,name):
    self.name=name
  def speak(self):
    print('bark')
class cat(animal):
  def __init__(self,name):
    self.name=name
  def speak(self):
    print('meow')
obj2.display()
obj2=dog('buddy')
obj2.speak()
obj3=cat('whiskers')
obj3.display()
obj3.speak()

#Multiple level inheritance
class animal:
  def __init__(self,name):
    self.name=name
  def info(self):
    print(self.name)
class mammal(animal):
  def __init__(self,name,has_fur):
    self.has_fur=has_fur
    super().__init__(name)
class dog(mammal):
  def __init__(self,name,has_fur,breed):
    super().__init__(name,has_fur)
    self.breed=breed
obj1=dog('fds','yes','german')
obj1.info()

class bank:
  def __init__(self):
    self.accountnumber=int(input("enter the account number:"))
    self.name=input("enter the name:")
    self.balance=int(input("enter the balance:"))
  def withdraw(self):
    self.amount=int(input("enter the amount"))
    self.balance=self.balance-self.amount
  def deposit(self):
    self.amount=int(input("enter the amount"))
    self.balance=self.balance+self.amount
  def bankfees(self):
    self.balance=self.balance-5
    print(self.balance)
  def display(self):
    print("accountnumber",self.accountnumber)
    print('Name',self.name)
    print('bankbalance',self.balance)
obj1=bank()
print('for depositing')
obj1.deposit()
print("for Withdrawing")
obj1.withdraw()
print("bankfees")
obj1.bankfees()
print("Details of  account holder")
obj1.display()

class Bank_Account :

  def __init__(self , id , name):
    self.id=id
    self.name=name
    self.balance=0

  def Deposit(self):
    a=int(input("enter the anount to deposit : "))
    self.balance+=a
    self.bankFees(a)  # ????

  def Withdraw(self):
    a=int(input("enter the amount to be withdrawn : "))
    if a>self.balance :
      print("insufficient funds ")
    else :
      self.balance-=a
    self.bankFees(a)

  def bankFees(self,a):
    fees = 0.05*a
    print("bank fees for the transaction = ", fees )
    print('')

  def display(self):
    print(self.name)
    print(self.id)
    print(self.balance)
    print("")

ob1=Bank_Account(123,'tharun')
while(True):
  print('1-make a deposit')
  print('2-make a withdraw')
  print('3-display')
  print('4-exit')
  choice=int(input("enter your choice : "))
  if choice==1:
     ob1.Deposit()
  elif choice==2:
    ob1.Withdraw()
  elif choice==3:
    ob1.display()
  elif choice==4:
    break
  else:
    print("invalid choice")